gui:
  # stuff relating to the UI
  scrollHeight: 2 # how many lines you scroll by
  scrollPastBottom: true # enable scrolling past the bottom
  sidePanelWidth: 0.3333 # number from 0 to 1
  expandFocusedSidePanel: false
  mainPanelSplitMode: 'flexible' # one of 'horizontal' | 'flexible' | 'vertical'
  theme:
    lightTheme: false # For terminals with a light background
    activeBorderColor:
      - cyan
      - bold
    inactiveBorderColor:
      - white
    optionsTextColor:
      - blue
    selectedLineBgColor:
      - default
    selectedRangeBgColor:
      - blue
  commitLength:
    show: true
  mouseEvents: true
  skipUnstageLineWarning: false
  skipStashWarning: true
  showFileTree: false # for rendering changes files in a tree format
  showListFooter: true # for seeing the '5 of 20' message in list panels
  showRandomTip: true
  showCommandLog: true
  commandLogSize: 8
git:
  paging:
    colorArg: always
    # FIXME Illgel dark?
    # pager: delta --dark --paging=never --24-bit-color=never --theme="OneHalfDark"
    useConfig: false
  merging:
    # only applicable to unix users
    manualCommit: false
    # extra args passed to `git merge`, e.g. --no-ff
    args: ''
  # pull:
  # FIXME
  #   mode: 'auto' # one of 'auto' | 'merge' | 'rebase' | 'ff-only', auto reads from git configuration
  skipHookPrefix: WIP
  autoFetch: true
  branchLogCmd: 'git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --'
  allBranchesLogCmd: 'git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium'
  overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
  disableForcePushing: false
  parseEmoji: false
os:
  editCommand: '' # see 'Configuring File Editing' section
  openCommand: ''
refresher:
  refreshInterval: 10 # file/submodule refresh interval in seconds
  fetchInterval: 60 # re-fetch interval in seconds
update:
  method: prompt # can be: prompt | background | never
  days: 14 # how often an update is checked for
reporting: 'undetermined' # one of: 'on' | 'off' | 'undetermined'
confirmOnQuit: false
# determines whether hitting 'esc' will quit the application when there is nothing to cancel/close
quitOnTopLevelReturn: false
disableStartupPopups: false
notARepository: 'prompt' # one of: 'prompt' | 'create' | 'skip'
# TODO
# customCommands:
#   - key: '<c-r>'
#     command: 'hub browse -- "commit/{{.SelectedLocalCommit.Sha}}"'
#     context: 'commits'
#   - key: 'a'
#     command: "git {{if .SelectedFile.HasUnstagedChanges}} add {{else}} reset {{end}} {{.SelectedFile.Name}}"
#     context: 'files'
#     description: 'toggle file staged'
#   - key: 'C'
#     command: "git commit"
#     context: 'global'
#     subprocess: true
#   - key: 'n'
#     prompts:
#       - type: 'menu'
#         title: 'What kind of branch is it?'
#         options:
#           - name: 'feature'
#             description: 'a feature branch'
#             value: 'feature'
#           - name: 'hotfix'
#             description: 'a hotfix branch'
#             value: 'hotfix'
#           - name: 'release'
#             description: 'a release branch'
#             value: 'release'
#       - type: 'input'
#         title: 'What is the new branch name?'
#         initialValue: ''
#     command: "git flow {{index .PromptResponses 0}} start {{index .PromptResponses 1}}"
#     context: 'localBranches'
#     loadingText: 'creating branch'
#   - key : 'r'
#     description: 'Checkout a remote branch as FETCH_HEAD'
#     command: "git fetch {{index .PromptResponses 0}} {{index .PromptResponses 1}} && git checkout FETCH_HEAD"
#     context: 'remotes'
#     prompts:
#       - type: 'menu'
#         title: 'Remote:'
#         initialValue: "{{index .SelectedRemote.Name }}"
#       - type: 'menuFromCommand'
#         title: 'Remote branch:'
#         command: 'git branch  -r --list {{index .PromptResponses 0}}/*'
#         filter: '.*{{index .PromptResponses 0}}/(?P<branch>.*)'
#         valueFormat: '{{ .branch }}'
#         labelFormat: '{{ .branch | green }}'
