From 634b8d368f523093e9cc0f08624be7ab565b1123 Mon Sep 17 00:00:00 2001
From: fida <iwanderuu@gmail.com>
Date: Fri, 10 Sep 2021 13:15:13 +0800
Subject: [PATCH] font color

---
 config.h | 37 ++++++++++++++++++++++++++-----------
 dwm.c    | 12 ++++++------
 2 files changed, 32 insertions(+), 17 deletions(-)

diff --git a/config.h b/config.h
index 9a04fc8..fa45512 100644
--- a/config.h
+++ b/config.h
@@ -20,18 +20,34 @@ static const Bool viewontag         = True;     /* Switch view on tag switch */
 //static const char dmenufont[]       = "TerminessTTF Nerd Font Mono:size=12";
 static const char *fonts[]          = { "JetBrainsMono Nerd Font Mono:size=14", "JoyPixels:pixelsize=14:antialias=true:autohint=true"  };
 static const char dmenufont[]       = "JetBrainsMono Nerd Font Mono:size=14";
-static const char col_gray1[]       = "#222222";
-static const char col_gray2[]       = "#333333";
-static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#37474F";
+static const char col_gray1[]            = "#1e1e1e";
+static const char col_gray2[]            = "#333333";
+static const char col_gray3[]            = "#bbbbbb";
+static const char col_gray4[]            = "#fefefe";
+static const char col_cyan[]             = "#005577";
+static const char col_purple[]           = "#5a5aa4";
+static const char col_red[]              = "#d54646";
+static const char col_green[]            = "#23d18b";
+static const char col_yellow[]           = "#d7ba7d";
+static const char col_blue[]             = "#81a1c1";
+static const char col_info_blue[]        = "#4fc1ff";
+static const char col_magenta[]          = "#c586c0";
+static const char col_white[]            = "#abb2bf";
+static const char col_bg_alt[]           = "#212121";
 static const char col_border[]      = "#43A5F5";
 static const unsigned int baralpha = 0xd0;
 static const unsigned int borderalpha = OPAQUE;
-static const char *colors[][3]      = {
-    /*               fg         bg         border   */
-    [SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-    [SchemeSel]  = { col_gray4, col_cyan,  col_border },
+static const char *colors[][3] = {
+	/*               fg         bg         border   */
+	[SchemeNorm]     = { col_gray4, col_gray1, col_gray2 },
+	[SchemeSel]      = { col_gray4, col_blue,  col_blue  },
+	[SchemeStatus]   = { col_gray4, col_gray1,  "#000000"  }, // Statusbar right {text,background,not used but cannot be empty}
+
+	[SchemeTagsSel]  = { col_info_blue, col_gray1,  "#000000"  }, // Tagbar left selected {text,background,not used but cannot be empty}
+  [SchemeTagsNorm] = { col_gray3, col_gray1,  "#000000"  }, // Tagbar left unselected {text,background,not used but cannot be empty}
+
+  [SchemeInfoSel]  = { col_yellow, col_gray1,  "#000000"  }, // infobar middle  selected {text,background,not used but cannot be empty}
+  [SchemeInfoNorm] = { col_yellow, col_gray1,  "#000000"  }, // infobar middle  unselected {text,background,not used but cannot be empty}
 };
 static const unsigned int alphas[][3]      = {
     /*               fg      bg        border     */
@@ -40,8 +56,7 @@ static const unsigned int alphas[][3]      = {
 };
 
 /* tagging */
-static const char *tags[] = { "🌀", "🌀", "🌀", "🌍", "🍓", "🍉", "🍑", "🍊", "🍎"};
-//static const char *tags[] = { "", "", "", "", "", "", "", "", ""};
+static const char *tags[] = {"\uf120", "\uf7ae", "\uf121", "\uf04b", "\ue62e", "\uf251", "\ue727", "\uf537", "\uf684"};
 static const char *tagsalt[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
 
 static const Rule rules[] = {
diff --git a/dwm.c b/dwm.c
index 7c71ec6..e53a146 100644
--- a/dwm.c
+++ b/dwm.c
@@ -77,7 +77,7 @@
 
 /* enums */
 enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
-enum { SchemeNorm, SchemeSel }; /* color schemes */
+enum { SchemeNorm, SchemeSel, SchemeStatus, SchemeTagsSel, SchemeTagsNorm, SchemeInfoSel, SchemeInfoNorm }; /* color schemes */
 enum { NetSupported, NetWMName, NetWMState, NetWMCheck,
        NetSystemTray, NetSystemTrayOP, NetSystemTrayOrientation, NetSystemTrayOrientationHorz,
        NetWMFullscreen, NetActiveWindow, NetWMWindowType,
@@ -885,7 +885,7 @@ drawbar(Monitor *m)
 
 	/* draw status first so it can be overdrawn by tags later */
 	if (m == selmon) { /* status is only drawn on selected monitor */
-		drw_setscheme(drw, scheme[SchemeNorm]);
+		drw_setscheme(drw, scheme[SchemeStatus]);
 		sw = TEXTW(stext) - lrpad / 2 + 2; /* 2px right padding */
 		drw_text(drw, m->ww - sw - stw, 0, sw, bh, lrpad / 2 - 2, stext, 0);
 	}
@@ -900,7 +900,7 @@ drawbar(Monitor *m)
 	for (i = 0; i < LENGTH(tags); i++) {
 		w = TEXTW(tags[i]);
 		wdelta = selmon->alttag ? abs(TEXTW(tags[i]) - TEXTW(tagsalt[i])) / 2 : 0;
-		drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
+		drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeTagsSel : SchemeTagsNorm]);
 		drw_text(drw, x, 0, w, bh, wdelta + lrpad / 2, (selmon->alttag ? tagsalt[i] : tags[i]), urg & 1 << i);
 		if (occ & 1 << i)
 			drw_rect(drw, x + boxs, boxs, boxw, boxw,
@@ -909,17 +909,17 @@ drawbar(Monitor *m)
 		x += w;
 	}
 	w = blw = TEXTW(m->ltsymbol);
-	drw_setscheme(drw, scheme[SchemeNorm]);
+	drw_setscheme(drw, scheme[SchemeTagsNorm]);
 	x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0);
 
 	if ((w = m->ww - sw - stw - x) > bh) {
 		if (m->sel) {
-			drw_setscheme(drw, scheme[m == selmon ? SchemeSel : SchemeNorm]);
+			drw_setscheme(drw, scheme[m == selmon ? SchemeInfoSel : SchemeInfoNorm]);
 			drw_text(drw, x, 0, w, bh, lrpad / 2, m->sel->name, 0);
 			if (m->sel->isfloating)
 				drw_rect(drw, x + boxs, boxs, boxw, boxw, m->sel->isfixed, 0);
 		} else {
-			drw_setscheme(drw, scheme[SchemeNorm]);
+			drw_setscheme(drw, scheme[SchemeInfoNorm]);
 			drw_rect(drw, x, 0, w, bh, 1, 1);
 		}
 	}
-- 
2.33.0

